name: Build

on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        node-version: [18.x, 20.x, 22.x]  # specify the Node.js versions you want to test against
    env:
      YARN_IGNORE_ENGINES: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Install dependencies
        run: yarn install

      - name: Build Project (Mac)
        if: matrix.os == 'macos-latest'
        run: yarn package

      - name: Build Project (Windows)
        if: matrix.os == 'windows-latest'
        run: yarn package:windows

  build-prod:
    name: Build (Production)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Install dependencies
        run: yarn install

      - name: Install Sharp Libraries (Mac)
        if: matrix.os == 'macos-latest'
        run: |
          yarn add @img/sharp-libvips-darwin-arm64 @img/sharp-libvips-darwin-x64 --force

      - name: Install Sharp Libraries (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          yarn add @img/sharp-win32-arm64 @img/sharp-win32-ia32 @img/sharp-win32-x64 --force

      - name: Build Project (Mac)
        if: matrix.os == 'macos-latest'
        run: yarn package

      - name: Build Project (Windows)
        if: matrix.os == 'windows-latest'
        run: yarn package:windows
